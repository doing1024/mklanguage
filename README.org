* 简介
MakeLanguage是一个创建新编程语言的简单方法，同时不妨碍它有高度的可定制性。

MakeLanguage基于替换将新语言翻译成老语言，从而实现简单的创建语言。

* 使用
将此仓库下载到本地，按照下面内容填写 =config.toml= ：
#+begin_src toml
  compileCommand = "编译老语言的命令，用;隔开"
  fileExt = "新语言后缀"
  compileExt = "老语言后缀"
  translateFile = "翻译表文件名，按照下文格式填写"
#+end_src
接下来，填写翻译表文件，创建一个json文件，按照如下格式填写:
#+begin_src json
  {
    "老语言内容": "新语言内容",
    "例如": "向下面这样",
    "print": "输出",
    "return": "返回",
    "没有": "行数限制"
  }
#+end_src
其中，越靠前优先级越高。

* 自定义
如果你还不满足如上规则，你还可以使用代码来自定义规则：
+ 创建 =extension.py= ，定义 =translate= 文件，输入为翻译前内容，输出为翻译后内容。
+ 此内容优先级高于翻译表文件。


* 贡献
如果您发现了错误/需要新功能，真心希望您能为我们提ISSUE/PR,感谢🙏！
